{"version":3,"sources":["components/Search.js","components/Header.js","components/NavBar.js","components/Button.js","components/Images.js","components/Gallary.js","components/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Search","search","query","useState","text","setText","className","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","currentTarget","header","name","picUrl","style","backgroundImage","defaultProps","navBar","onLogoClick","onClick","Button","classN","txtColor","bgColor","btnText","backgroundColor","color","console","log","iconStyle","margin","width","height","pointerEvents","cursor","Images","largPic","modal","id","src","icon","faFileDownload","window","open","Gallary","GalaryTite","pics","onBtnClick","map","pic","photographer","medium","large2x","profImg","posterName","imgUrl","original","Modal","picInfo","close","size","setSize","hideShow","setHideShow","faChevronDown","tiny","htmlFor","small","portrait","large","App","auth","submitedUrl","setSubmitedUrl","modalPic","setModalPic","headerInfo","setHeaderInfo","title","setTitle","pictures","setPictures","useEffect","a","curatedHeader","curatedPhotos","getHeaderInfo","fetch","headers","Authorization","dataFetch","json","catch","err","data","currentDay","Date","getDate","randoNum","photos","amount","fetchUrl","newFetchedUrl","replace","NavBar","Header","length","index","findIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7502cf53.chunk.js","sourcesContent":["import {useState} from 'react'\r\nimport {FaSearch} from 'react-icons/fa';\r\n\r\nconst Search = ({search,query}) => {\r\n\r\n    const [text,setText] = useState('');\r\n\r\n    function submitSearch(e){\r\n        e.preventDefault();\r\n\r\n        if(!text){\r\n            alert(\"Please type a query in the search bar.\");\r\n            return;\r\n        }\r\n\r\n        search(`https://api.pexels.com/v1/search?query=${text}&per_page=8&page=1`);\r\n        query(text);\r\n\r\n        setText('');\r\n    }\r\n\r\n    return (\r\n        <form className=\"search\" onSubmit={submitSearch}>\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Enter search\"\r\n                value={text}\r\n                onChange={ e => setText(e.currentTarget.value) }\r\n                className=\"search-field\"\r\n            />\r\n            <button \r\n                type=\"submit\"\r\n                value=\"Search\"\r\n                className=\"btn btn-search\" \r\n            >\r\n                <FaSearch />\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import PropTypes from 'prop-types';\r\nimport Search from './Search';\r\n\r\nconst header = ( {name,picUrl,query,search} ) => {\r\n\r\n    return (\r\n        <div\r\n            className=\"hero-header\" \r\n            style={{backgroundImage: `url(\"${picUrl}\")`\r\n        }}>\r\n            <div className=\"hero-content\" >\r\n                <h1>\r\n                    The best free stock photos and videos shared by talented creators.\r\n                </h1>\r\n            \r\n                <Search search={search} query={query} />\r\n            </div>\r\n\r\n            <span>Photo by {name}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nheader.defaultProps = {\r\n    name: \"Pok Rei\",\r\n    picUrl: \"https://images.pexels.com/photos/132037/pexels-photo-132037.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260\"\r\n}\r\n\r\nheader.propTypes = {\r\n    name: PropTypes.string,\r\n    picture: PropTypes.string\r\n}\r\n\r\nexport default header;","import Search from './Search'\r\n\r\nconst navBar = ({search,query,onLogoClick}) => {\r\n    return (\r\n        <nav className=\"nav-bar\">\r\n            <div className=\"logo\" onClick={()=>onLogoClick}></div>\r\n            <div className=\"nav-search\">\r\n                <Search search={search} query={query} />\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default navBar\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({classN,txtColor,bgColor,btnText,onClick}) => {\r\n\r\n    return (\r\n        <button \r\n            onClick={onClick} \r\n            className={`btn ${classN}`}\r\n            style={{backgroundColor:bgColor, color:txtColor}}\r\n        >\r\n            {btnText}\r\n        </button>\r\n    )\r\n}\r\n\r\nfunction defaultFunc(){\r\n    console.log(\"no actions assigned\");\r\n}\r\n\r\nButton.defaultProps = {\r\n    bgColor: 'pink',\r\n    txtColor: 'green',\r\n    btnText: \"Text\",\r\n    onClick: defaultFunc\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    txtColor: PropTypes.string,\r\n    bgColor: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Images = ({ name, picUrl, largPic, modal, id }) => {\r\n    \r\n    return (\r\n        <div className=\"gallary-img-container\">\r\n            <img \r\n                src={ picUrl }\r\n                className=\"gallary-img\"\r\n                onClick={ ()=> modal(id) }\r\n            ></img>\r\n\r\n            <div className=\"img-info\">\r\n                \r\n                <div className=\"photographer-info\">\r\n                    <span className=\"photographer-name\">{ name }</span>\r\n                </div>\r\n\r\n                <div className=\"img-actions\">\r\n                    <FontAwesomeIcon \r\n                        className=\"img-actions-icons\" \r\n                        icon={ faFileDownload } \r\n                        style={ iconStyle }\r\n                        onClick={ ()=> window.open(largPic) }\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst iconStyle = {\r\n    margin: '6px',\r\n    width: '30px',\r\n    height: '30px',\r\n    color: '#fff',\r\n    pointerEvents: 'all',\r\n    cursor: 'pointer',\r\n}\r\n\r\nImages.propTypes = {\r\n    name: PropTypes.string,\r\n    picture: PropTypes.string,\r\n    dlLink: PropTypes.string\r\n}\r\nexport default Images\r\n","import {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from './Button';\r\nimport Images from './Images';\r\n\r\nconst Gallary = ( {GalaryTite,pics,onBtnClick,modal} ) => {\r\n\r\n    return (\r\n        <div className=\"gallary-section\">\r\n            <h2>{ GalaryTite }</h2>\r\n            <div className=\"gallary\">\r\n                \r\n                { pics.map((pic) => (\r\n                    <Images\r\n                        name={pic.photographer}\r\n                        picUrl={pic.src.medium}\r\n                        largPic={pic.src.large2x}\r\n                        id={pic.id}\r\n                        modal={ modal }\r\n                    />\r\n                ) )}\r\n            </div>\r\n\r\n            <Button onClick={ onBtnClick } bgColor=\"#7E4DD2\" txtColor=\"#fff\"  btnText=\"Load More\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nGallary.defaultProps = {\r\n    profImg: \"https://images.pexels.com/users/avatars/92810756/brian-lazo-240.jpeg?auto=compress&fit=crop&h=256&w=256\",\r\n    posterName: \"Brian Lazo\",\r\n    imgUrl: \"https://images.pexels.com/photos/9160984/pexels-photo-9160984.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260\",\r\n    original: \"https://www.pexels.com/photo/9160984/download/?search_query=&tracking_id=so1xqtw586\"\r\n}\r\n\r\nGallary.propTypes = {\r\n    GalaryTite: PropTypes.string\r\n}\r\nexport default Gallary\r\n","import {useState} from 'react';\r\nimport Button from './Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Modal = ({picInfo,close}) => {\r\n    const [size,setSize]= useState(picInfo.src.medium);\r\n    const [hideShow,setHideShow]= useState(false);\r\n\r\n    return (\r\n        <div className=\"modal-bg\">\r\n            \r\n            <Button \r\n                className=\"closeBtn\"\r\n                txtColor={'white'}\r\n                bgColor={'transparent'}\r\n                btnText={'X'}\r\n                onClick={ close }\r\n            />\r\n            \r\n            <div className=\"modal\">\r\n                <span className=\"modal-info\">\r\n                    <h1>{picInfo.photographer}</h1>\r\n\r\n                    <div className=\"modal-actions\">\r\n                        <Button\r\n                            classN={\"dlBtn\"}\r\n                            txtColor={'white'}\r\n                            bgColor={'#7E4DD2'}\r\n                            btnText={'Download'}\r\n                            onClick={ ()=> window.open(size) }\r\n                        />\r\n                        <div>\r\n                            <Button className=\"dropDownBtn\" \r\n                                classN={\"ddBtn\"}\r\n                                txtColor={'white'}\r\n                                bgColor={'#7E4DD2'}\r\n                                btnText={\r\n                                    <FontAwesomeIcon className=\"img-actions-icons\" \r\n                                        icon={ faChevronDown }\r\n                                        style={ iconStyle }\r\n                                    />\r\n                                }\r\n                                onClick={ ()=> {setHideShow(!hideShow)} }\r\n                            />\r\n                            \r\n                            <form className={`dropDown ${hideShow === true && \"active\"}` } name=\"Size\" id=\"Size\">\r\n                                <ul>\r\n                                    <li>\r\n                                        <input id=\"tiny\" type=\"radio\" name=\"sizes\" onClick={ ()=> setSize(picInfo.src.tiny)} />\r\n                                        <label htmlFor=\"tiny\">Tiny</label>\r\n                                    </li>\r\n                                    <li>\r\n                                        <input id=\"small\" type=\"radio\" name=\"sizes\" onClick={ ()=> setSize(picInfo.src.small)} />\r\n                                        <label htmlFor=\"small\">Small</label>\r\n                                    </li>\r\n                                    <li>\r\n                                        <input id=\"portrait\"  type=\"radio\" name=\"sizes\" onClick={ ()=> setSize(picInfo.src.portrait)} />\r\n                                        <label htmlFor=\"portrait\">Portrait</label>\r\n                                    </li>\r\n                                    <li>\r\n                                        <input id=\"original\" type=\"radio\" name=\"sizes\" onClick={ ()=> setSize(picInfo.src.original)} />\r\n                                        <label htmlFor=\"original\">original</label>\r\n                                    </li>\r\n                                    <li>\r\n                                        <input id=\"medium\" type=\"radio\" name=\"sizes\" onClick={ ()=> setSize(picInfo.src.medium)} />\r\n                                        <label htmlFor=\"medium\">Medium</label>\r\n                                    </li>\r\n                                    <li>\r\n                                        <input id=\"large\" type=\"radio\" name=\"sizes\" onClick={ ()=> setSize(picInfo.src.large)} />\r\n                                        <label htmlFor=\"large\">Large</label>\r\n                                    </li>\r\n                                    <li>\r\n                                        <input id=\"large2\" type=\"radio\" name=\"sizes\" onClick={ ()=> setSize(picInfo.src.large2x)}/>\r\n                                        <label htmlFor=\"large2\">large x 2</label>\r\n                                    </li>\r\n                                </ul>\r\n                            </form>                            \r\n                        </div>\r\n                    </div>\r\n                </span>\r\n            \r\n                <div className=\"modal-img-container\">\r\n                    <img className=\"modal-img\" src={picInfo.src.large} ></img>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst iconStyle = {\r\n    color: '#fff',\r\n    pointerEvents: 'all'\r\n}\r\n\r\nexport default Modal\r\n","import {useState, useEffect} from 'react';\nimport './style/App.css';\nimport Header from './components/Header';\nimport NavBar from './components/NavBar';\nimport Galary from './components/Gallary';\nimport Modal from './components/Modal';\n\n/*\n  - search must submit a search request and set the results into the first 4 images\n    - the more btn must load more results. \n*/\n\nfunction App() {\n\n  // variables\n  const auth = \"563492ad6f91700001000001653e06666d1942be81ce3137b5a4417d\";\n  \n  \n  const [submitedUrl, setSubmitedUrl] = useState(`https://api.pexels.com/v1/curated?per_page=8&page=1`);\n  const [modalPic, setModalPic] = useState();\n  const [headerInfo, setHeaderInfo] = useState({});\n  const [title,setTitle] = useState(\"Today's selection\");\n  const [pictures, setPictures] = useState([]);\n\n  useEffect( ()=>{\n    async function getHeaderInfo() {\n      await curatedHeader();\n      await curatedPhotos(8,submitedUrl);\n    }\n    getHeaderInfo();\n  }, []);\n\n\n  const curatedHeader = async ()=>{\n\n    const dataFetch = await fetch(\"https://api.pexels.com/v1/search?query=landscape\", {\n      headers: {\n          Authorization: auth\n      }\n    });\n\n    const data = await dataFetch.json().catch( err => console.log(`Failed to fetch Header`) )\n\n    const currentDay = new Date().getDate();\n    const randoNum = currentDay > 15 ? currentDay % 15 : currentDay;\n    \n    setHeaderInfo( {imgUrl: data.photos[randoNum].src.original, name:  data.photos[randoNum].photographer} );\n  }\n\n  const curatedPhotos = async ( amount=8,fetchUrl )=>{\n    \n    const newFetchedUrl = fetchUrl.replace(/per_page=8/,`per_page=${amount}`);\n\n    const dataFetch = await fetch(newFetchedUrl, {\n      headers: {\n        Authorization: auth\n      }\n    });\n\n      const data = await dataFetch.json().catch( err => console.log(`Failed to fetch Photos`) );\n    \n      setPictures(data.photos);\n  }\n\n  function modal(id){\n    const index = pictures.findIndex(pic => pic.id == id);\n    setModalPic( pictures[index] );\n  }\n\n  return (\n    <div className=\"container\">\n      <NavBar\n        search={ (query)=> { curatedPhotos(8,query); setSubmitedUrl(query) } }\n        query={(query)=> setTitle(query)}\n      />\n      {typeof modalPic === 'object' && <Modal picInfo={modalPic} close={ ()=>  setModalPic('') } />}\n      <Header \n        picUrl={ headerInfo.imgUrl }\n        posterName={ headerInfo.name }\n        search={ (query)=> { curatedPhotos(8,query); setSubmitedUrl(query) } }\n        query={ (query)=> setTitle(query) }\n      />\n      <Galary\n        GalaryTite={title}\n        pics={ pictures }\n        onBtnClick={ ()=> curatedPhotos(pictures.length + 6, submitedUrl) }\n        modal={ (id)=> modal(id) }\n      /> \n      \n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}